name: BE CI

on:
  pull_request:
    branches:
      - main
    types: [ opened ]
    paths:
      - 'demo/**'

permissions: #github actions bot에게 권한 열기
  pages: write
  id-token: write
  contents: write
  issues: read
  checks: write
  pull-requests: write

jobs:
  be-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant Permission
        run: chmod +x demo/gradlew

      - name: Gradle Build
        run: |
          cd demo
          ./gradlew clean build -x test

      - name: Test with Gradle # test application build
        run: |
          cd demo
          ./gradlew test

      - name: Publish Unit Test Results # test 후 result를 보기 위해 추가
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }} # test가 실패해도 report를 남기기 위해 설정
        with:
          files: demo/build/test-results/**/*.xml

      - name: Copy
        run: |
          mkdir -p DEPLOY_FILE/server
          cp -r demo/build/libs/*.jar DEPLOY_FILE/server/

      - name: Git Config
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Build
        run: |
          timestamp=$(date +"%Y-%m-%d_%H-%M-%S")
          cp -r DEPLOY_FILE/server/* .
          git fetch origin
          git checkout prod || git checkout -b prod
          git add DEPLOY_FILE/server
          git commit -m "release: $timestamp BE 배포 완료"
          git push origin prod --force